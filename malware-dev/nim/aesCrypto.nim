import nimcrypto
import nimcrypto/sysrand

var 
  aliceKey = "Alice Key"
  aliceData = "Alice hidden secret"
  aliceIv = newString(aes256.sizeBlock)

  encText, decText = newString(len(aliceData))

discard randomBytes(addr aliceIv[0], 16)


proc encryptStr*(data2encr, enckey, uniqueiv: string): string = 
  var
    ectx: CTR[aes256]
    key = newString(aes256.sizeKey)
    iv = newString(aes256.sizeBlock)
    plainText = newString(len(data2encr))
    encText = newString(len(data2encr))

  copyMem(addr plainText[0], unsafeaddr data2encr[0], len(data2encr))
  copyMem(addr key[0], unsafeaddr enckey[0], len(enckey))
  copyMem(addr iv[0], unsafeaddr uniqueiv[0], len(uniqueiv))

  ectx.init(key, iv)
  ectx.encrypt(plainText, encText)
  ectx.clear

  echo "ENCRYPTED TEXT: ", encText
  result = encText

proc decryptStr*(data2decr, enckey, uniqueiv: string): string = 
  var
    dctx: CTR[aes256]
    key = newString(aes256.sizeKey)
    iv = newString(aes256.sizeBlock)
    plainText = newString(len(data2decr))
    encText = newString(len(data2decr))


  copyMem(unsafeaddr encText[0], unsafeaddr data2decr[0], len(data2decr))
  copyMem(unsafeaddr key[0], unsafeaddr enckey[0], len(enckey))
  copyMem(unsafeaddr iv[0], unsafeaddr uniqueiv[0], len(uniqueiv))

  dctx.init(key, iv)
  dctx.decrypt(encText, plainText)
  dctx.clear

  echo "DECRYPTED TEXT: ", plainText
  result = plainText
    
proc main() = 
  encText = encryptStr(aliceData, aliceKey, aliceIv)
  echo "ENCRYPTED TEXT: ", encText
  decText = decryptStr(encText, aliceKey, aliceIV)
  echo "DECRYPTED TEXT: ", decText
