#+TITLE: Staged and Stagless Payloads
#+AUTHOR: Russell Brinson
#+DATE: 2023-01-14

* Overview

- Staged payloads are a smaller payload that calls back to the server to get the rest of the payload.
- Stageless payloads are the full package of payload and functionality.

Great article from [[https://buffered.io/posts/staged-vs-stageless-handlers/][Buffered.io Staged vs Stageless Handlers]].

* Staged Payloads

#+BEGIN_QUOTE

    Establishes an active TCP connection back to Metasploit on a given address and port.
    Reads 4 bytes from Metasploit, which indicates the size of the payload.
    Allocates a block of memory that is RWX (readable, writable and executable) of a sufficient size.
    Reads the rest of the payload from the wire, and writes it to the allocated block of memory.
    When finished, control is passed directly to the start of the payload so that it can execute, which in this case involves the running of a patched DLL header that does the following:
        Loads itself (ie. metsrv) into memory correctly using Reflective DLL Injection.
        Calculates the offset to the configuration block.
        Patches the configuration block so that it contains the current open socket handle that is being used to talk to Metasploit.
        Executes dllmain() in the newly loaded metsrv, passing in a pointer to the configuration block so that metsrv can take control of the communication.
    With metsrv running, more magic happens:
        SSL is negotiated on the socket so that communications from this point are all encrypted.
        TLV packet communication can then commence with Metasploit.

From the Buffered.io article above
#+END_QUOTE

